
anotações git e github 

- git = VCS (version control system) 




*------------------------COMANDOS UTEIS--------------------------------*


1 - ls (lista os repositorios/arquivos) 
2 - cd (abre o repositorio/arquivo) 
3 - ctrl + l (limpa os comandos do terminal) 
4 - mkdir (cria uma parta) 
5 - git init (inicializa um um repositorio git vazio) 
6 - git status (mostra o status de cada arquivo dentro da pasta) 
7 - git add + nomeDoArquivo (prepara o arquivo para ser commitado) 
    7.1 - git add . (prepara TODOS os aquivos para serem commitados) 
8 - git commit (envia o arquivo para o repositorio local) 
     8.1 - git commit -m "mensagem do commit" (forma simplificada de fazer o commit) 
9 - git log (mostra os commits feitos) 
10 - cd ~ ou cd .. (sai do diretorio atual e volta para o home) 
11 - touch + nomeDoArquivo + tipoDoArquivo (cria arquivos) 
12 - echo "conteudo do texto" >> nomeDoArquivoDeTexto.txt (adiciona texto ao arquivo no terminal de comando) 
13 - cat nomeDoArquivo.txt (mostra o texto do arquivo) 
obs: para sair da tela de mensagem de commit no gitBash e afetuar o commit) : (ESC) + ':wq' 
14 - nano nomeDoArquivo.txt (edita o conteudo do texto de um arquivo) 
   14.1 - ctrl + x (submete as mudanças no texto e finaliza o nano) 
       14.2 - git diff nomeDoArquivo.txt (mostra quais foram as mudanças no texto do arquivo) 
15 -  rm -rf (apaga uma pasta) 



------------------ INICIANDO REPOSITORIO COM COMANDOS NO TERMINAL ----------------------

1 - git remote add origin + linkDoRepositorio (adiciona um repositorio git remoto ao computador) 
2 - git push origin master (nome da branch)  = (liga a master local com a master remota) 
3 - git pull origin master (pega as alterações feitas em arquivos no github e traz para o computador (git)) 


obs: caso aconteça um erro ao subir um arquivo (git push) segue abaixo a resolução: 
> git push -f origin master 

